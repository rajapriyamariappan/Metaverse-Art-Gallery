{"version":3,"file":"components.js","mappings":"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","sources":["webpack://networked-aframe-glitch/webpack/universalModuleDefinition","webpack://networked-aframe-glitch/./src/change-room.js","webpack://networked-aframe-glitch/./src/player-info.js","webpack://networked-aframe-glitch/webpack/bootstrap","webpack://networked-aframe-glitch/webpack/runtime/compat get default export","webpack://networked-aframe-glitch/webpack/runtime/define property getters","webpack://networked-aframe-glitch/webpack/runtime/hasOwnProperty shorthand","webpack://networked-aframe-glitch/webpack/runtime/make namespace object","webpack://networked-aframe-glitch/./src/components.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/* global AFRAME, NAF */\n// MIT License\n\n// Copyright (c) 2024 Vincent Fretin\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nlet nafConfig;\nlet connecting = false;\n\nAFRAME.registerComponent('change-room', {\n  schema: {\n    on: { type: 'string', default: 'click' },\n    room: { type: 'string', default: '' },\n    url: { type: 'string', default: '' },\n    select: { type: 'string', default: '#scene' },\n    target: { type: 'string', default: '#scene' },\n  },\n  init() {\n    this.changeRoom = this.changeRoom.bind(this);\n  },\n  async changeRoom() {\n    if (connecting) {\n      return;\n    }\n\n    const sceneEl = this.el.sceneEl;\n    const { url, select, target } = this.data;\n    try {\n      connecting = true;\n      window.history.pushState(null, '', url);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const html = await response.text();\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, 'text/html');\n\n      const selectedContent = doc.querySelector(select);\n      if (selectedContent) {\n        const targetEl = document.querySelector(target);\n        targetEl.outerHTML = selectedContent.outerHTML;\n      } else {\n        console.error(`Element ${target} not found in the fetched document.`);\n      }\n\n      if (sceneEl.getAttribute('networked-scene').room === this.data.room) {\n        connecting = false;\n        return;\n      }\n\n      if (!nafConfig) {\n        nafConfig = { ...sceneEl.getAttribute('networked-scene'), connectOnLoad: false };\n      }\n      nafConfig.room = this.data.room;\n\n      sceneEl.removeAttribute('networked-scene');\n      setTimeout(() => {\n        sceneEl.setAttribute('networked-scene', nafConfig);\n        sceneEl.emit('connect');\n        document.body.addEventListener(\n          'connected',\n          () => {\n            connecting = false;\n            const rig = document.getElementById('rig');\n            rig.setAttribute('networked-aframe', { creator: NAF.clientId });\n            NAF.utils.takeOwnership(rig);\n          },\n          { once: true },\n        );\n      }, 1000);\n    } catch (error) {\n      connecting = false;\n      console.error('There has been a problem with the fetch operation:', error);\n    }\n  },\n  play() {\n    this.el.addEventListener(this.data.on, this.changeRoom);\n  },\n  pause() {\n    this.el.removeEventListener(this.data.on, this.changeRoom);\n  },\n});\n","/* global AFRAME NAF THREE */\nconst ANIMATIONS_MAN = [\n  [\n    'SittingIdle',\n    'https://cdn.glitch.global/3e6e78f9-b796-4cf3-8451-2fcba6103a3c/SittingIdle_man.fbx?v=1711641528318', // Overdrive 40 Character Arm-Space 50\n    {\n      ignoreBones: [\n        'Spine1',\n        'Spine2',\n        'Neck',\n        'Head',\n        'LeftEye',\n        'LeftEye_end',\n        'LeftEye_end_end',\n        'RightEye',\n        'RightEye_end',\n        'RightEye_end_end',\n      ],\n      positionMultiplier: 0.01,\n      positionOffset: -0.1,\n    },\n  ],\n\n  [\n    'Idle',\n    'https://cdn.glitch.global/d8f22817-cf4b-44e4-9cc1-0633ac6cda8d/BreathingIdle.fbx?v=1701432248342',\n    {\n      ignoreBones: [\n        'Spine1',\n        'Spine2',\n        'Neck',\n        'Head',\n        'LeftEye',\n        'LeftEye_end',\n        'LeftEye_end_end',\n        'RightEye',\n        'RightEye_end',\n        'RightEye_end_end',\n      ],\n      positionMultiplier: 0.01,\n      positionOffset: -0.1,\n    },\n  ],\n\n  [\n    'Walking',\n    'https://cdn.glitch.global/d8f22817-cf4b-44e4-9cc1-0633ac6cda8d/Walking.fbx?v=1701432532423',\n    {\n      ignoreBones: ['LeftEye', 'LeftEye_end', 'LeftEye_end_end', 'RightEye', 'RightEye_end', 'RightEye_end_end'],\n      positionMultiplier: 0.01,\n      positionOffset: -0.1,\n      removeHipsForwardAnimation: true,\n    },\n  ],\n\n  [\n    'Dying',\n    'https://cdn.glitch.global/3e6e78f9-b796-4cf3-8451-2fcba6103a3c/Dying.fbx?v=1703867995062',\n    {\n      ignoreBones: ['LeftEye', 'LeftEye_end', 'LeftEye_end_end', 'RightEye', 'RightEye_end', 'RightEye_end_end'],\n      positionMultiplier: 0.01,\n      positionOffset: 0,\n    },\n  ],\n];\n\nconst ANIMATIONS_WOMAN = [\n  [\n    'SittingIdle',\n    'https://cdn.glitch.global/3e6e78f9-b796-4cf3-8451-2fcba6103a3c/SittingIdle_woman.fbx?v=1711641103935', // Overdrive 40 Character Arm-Space 62\n    {\n      ignoreBones: [\n        'Spine1',\n        'Spine2',\n        'Neck',\n        'Head',\n        'LeftEye',\n        'LeftEye_end',\n        'LeftEye_end_end',\n        'RightEye',\n        'RightEye_end',\n        'RightEye_end_end',\n      ],\n      positionMultiplier: 0.01,\n      positionOffset: -0.1,\n    },\n  ],\n\n  [\n    'Idle',\n    'https://cdn.glitch.global/d8f22817-cf4b-44e4-9cc1-0633ac6cda8d/BreathingIdle.fbx?v=1701432248342',\n    {\n      ignoreBones: [\n        'Spine1',\n        'Spine2',\n        'Neck',\n        'Head',\n        'LeftEye',\n        'LeftEye_end',\n        'LeftEye_end_end',\n        'RightEye',\n        'RightEye_end',\n        'RightEye_end_end',\n      ],\n      positionMultiplier: 0.01,\n      positionOffset: -0.168,\n    },\n  ],\n\n  [\n    'Walking',\n    'https://cdn.glitch.global/d8f22817-cf4b-44e4-9cc1-0633ac6cda8d/Walking.fbx?v=1701432532423',\n    {\n      ignoreBones: ['LeftEye', 'LeftEye_end', 'LeftEye_end_end', 'RightEye', 'RightEye_end', 'RightEye_end_end'],\n      positionMultiplier: 0.01,\n      positionOffset: -0.168,\n      removeHipsForwardAnimation: true,\n    },\n  ],\n\n  [\n    'Dying',\n    'https://cdn.glitch.global/3e6e78f9-b796-4cf3-8451-2fcba6103a3c/Dying.fbx?v=1703867995062',\n    {\n      ignoreBones: ['LeftEye', 'LeftEye_end', 'LeftEye_end_end', 'RightEye', 'RightEye_end', 'RightEye_end_end'],\n      positionMultiplier: 0.01,\n      positionOffset: 0,\n    },\n  ],\n];\n\n// const asianModel = 'https://cdn.jsdelivr.net/gh/c-frame/valid-avatars-glb@c539a28/avatars/Asian/Asian_F_1_Busi.glb';\n// const defaultModel = asianModel;\nconst defaultModel = ''; // none, set via the UI\nconst animationsCache = {};\n\n// Temporary workaround for template declaration; see issue 167\nNAF.schemas.getComponentsOriginal = NAF.schemas.getComponents;\nNAF.schemas.getComponents = (template) => {\n  if (!NAF.schemas.hasTemplate('#avatar-template')) {\n    NAF.schemas.add({\n      template: '#avatar-template',\n      components: [\n        'avatar-bones',\n        'player-info',\n        {\n          component: 'position',\n          requiresNetworkUpdate: NAF.utils.vectorRequiresUpdate(0.001),\n        },\n        {\n          component: 'rotation',\n          requiresNetworkUpdate: NAF.utils.vectorRequiresUpdate(0.5),\n        },\n        {\n          selector: '.model',\n          component: 'rotation',\n          requiresNetworkUpdate: NAF.utils.vectorRequiresUpdate(0.5),\n        },\n      ],\n    });\n  }\n\n  const components = NAF.schemas.getComponentsOriginal(template);\n  return components;\n};\n\nconst y180Quaternion = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.PI);\n\nconst truncate = (num) => Math.round(num * 100) / 100;\n\n// To sync head in VR\nAFRAME.registerComponent('avatar-bones', {\n  schema: {\n    // Neck: { type: 'vec4' },\n    Head: { type: 'vec4' },\n  },\n  init: function () {\n    const MODE_LERP = 0;\n    if (this.el.id !== 'rig') {\n      // this.neckBuffer = new NAF.InterpolationBuffer(MODE_LERP, 0.1);\n      this.headBuffer = new NAF.InterpolationBuffer(MODE_LERP, 0.1);\n    }\n    this.localEuler = new THREE.Euler();\n    this.localQuaternion = new THREE.Quaternion();\n    this.localQuaternion2 = new THREE.Quaternion();\n    this.localQuaternion3 = new THREE.Quaternion();\n    this.tmpQuaternion = new THREE.Quaternion();\n    this.transitionQuaternionStart = new THREE.Quaternion();\n    this.transitionQuaternionEnd = new THREE.Quaternion();\n    this.prevTime = 0;\n    this.transitionProgress = 1;\n  },\n  events: {\n    'model-loaded': function () {\n      // If we switch the avatar, reset mesh to retrieve the bones of the new avatar\n      queueMicrotask(() => {\n        // Execute this after the model-loaded listener from player-info\n        this.mesh = this.el.components['player-info'].mesh;\n        if (this.mesh) {\n          const bones = this.mesh.skeleton.bones;\n          this.hips = getBoneByName('Hips', bones);\n          this.spine = getBoneByName('Spine', bones);\n          this.spine1 = getBoneByName('Spine1', bones);\n          this.spine2 = getBoneByName('Spine2', bones);\n          this.neck = getBoneByName('Neck', bones);\n          this.head = getBoneByName('Head', bones);\n          // this.mesh.skeleton.pose();\n          // save quaternion of some bones of the default pose before an animation is played on the avatar\n          this.spine1quaternion = new THREE.Quaternion().copy(this.spine1.quaternion);\n          this.spine2quaternion = new THREE.Quaternion().copy(this.spine2.quaternion);\n          this.neckquaternion = new THREE.Quaternion().copy(this.neck.quaternion);\n        }\n      });\n    },\n  },\n  update: function (oldData) {\n    if (this.el.id === 'rig') {\n      // if (this.neck) this.neck.quaternion.copy(this.data.Neck);\n      // if (this.head) this.neck.quaternion.copy(this.data.Head);\n    } else {\n      // this.neckBuffer.setQuaternion(this.data.Neck);\n      this.headBuffer.setQuaternion(this.data.Head);\n    }\n  },\n  tick: function (time, dt) {\n    if (this.el.id === 'rig') {\n      if (this.head) {\n        if (!this.cameraEl) {\n          this.cameraEl = this.el.querySelector('.camera');\n          if (!this.cameraEl) {\n            console.log('No .camera found on rig children');\n            return;\n          }\n        }\n\n        const camera = this.cameraEl.object3D;\n        const avatarQuaternion = this.el.components['player-info'].avatarEl.object3D.quaternion;\n        const hmdQuaternion = this.localQuaternion.copy(camera.quaternion).multiply(y180Quaternion);\n\n        const hmdEuler = this.localEuler.setFromQuaternion(hmdQuaternion, 'YXZ');\n        hmdEuler.x = 0;\n        hmdEuler.z = 0;\n        const hmdXYRotation = this.localQuaternion2.setFromEuler(hmdEuler);\n\n        const angle = avatarQuaternion.angleTo(hmdXYRotation);\n        if (angle > 0.5 || time - this.prevTime > 2000) {\n          // If more than 28 degrees, move the avatar, otherwise just move the head\n          // avatarQuaternion.copy(hmdXYRotation);\n          this.transitionProgress = 0;\n          this.transitionQuaternionStart.copy(avatarQuaternion);\n          this.transitionQuaternionEnd.copy(hmdXYRotation);\n          this.prevTime = time;\n        }\n\n        if (this.transitionProgress < 1) {\n          this.transitionProgress += dt * 0.006;\n          avatarQuaternion.slerpQuaternions(\n            this.transitionQuaternionStart,\n            this.transitionQuaternionEnd,\n            this.transitionProgress,\n          );\n        }\n\n        if (this.el.components['player-info'].data.state !== 'Idle') return;\n\n        this.spine1.quaternion.copy(this.spine1quaternion);\n        this.spine2.quaternion.copy(this.spine2quaternion);\n        this.neck.quaternion.copy(this.neckquaternion);\n\n        this.head.quaternion.copy(hmdQuaternion).premultiply(this.localQuaternion3.copy(avatarQuaternion).invert());\n        // x and z rotation is inversed\n        const tmp = this.head.rotation.z;\n        this.head.rotation.z = -this.head.rotation.x;\n        this.head.rotation.x = tmp;\n        this.head.rotation.y -= 0.3;\n        this.head.rotation.z = Math.max(-1, Math.min(0.7, this.head.rotation.z));\n        this.head.rotation.x = Math.max(-1, Math.min(1, this.head.rotation.x));\n        // The networked schema will use deepEqual in defaultRequiresUpdate for the requiresNetworkUpdate function,\n        // so we truncate to 0.01 decimal, this prevent sending the info every 66ms if not much changed (more or less 0.5 degrees)\n        this.data.Head.x = truncate(this.head.quaternion.x);\n        this.data.Head.y = truncate(this.head.quaternion.y);\n        this.data.Head.z = truncate(this.head.quaternion.z);\n        this.data.Head.w = truncate(this.head.quaternion.w);\n      }\n    } else {\n      if (this.el.components['player-info'].data.state !== 'Idle') return;\n      if (this.spine1) this.spine1.quaternion.copy(this.spine1quaternion);\n      if (this.spine2) this.spine2.quaternion.copy(this.spine2quaternion);\n      if (this.neck) this.neck.quaternion.copy(this.neckquaternion);\n\n      // this.neckBuffer.update(dt);\n      // if (this.neck) this.neck.quaternion.copy(this.neckBuffer.getQuaternion());\n      this.headBuffer.update(dt);\n      if (this.head) this.head.quaternion.copy(this.headBuffer.getQuaternion());\n    }\n  },\n});\n\nAFRAME.registerComponent('player-info', {\n  dependencies: ['avatar-bones'],\n  schema: {\n    name: { type: 'string', default: 'anonymous' },\n    color: { type: 'color', default: '#ffffff' },\n    avatarSrc: { type: 'string', default: defaultModel },\n    state: { type: 'string', default: 'Idle' },\n    muted: { type: 'boolean', default: false },\n    avatarPose: { type: 'string', default: 'stand', oneOf: ['stand', 'sit'] },\n    seatRotation: { type: 'number', default: 0 },\n  },\n\n  init: function () {\n    // this.head = this.el.querySelector('.head');\n    this.nametag = this.el.querySelector('.nametag');\n    this.setAnimation = this.setAnimation.bind(this);\n    this.setAnimationFromState = this.setAnimationFromState.bind(this);\n    this.getAnimationMixer = this.getAnimationMixer.bind(this);\n    this.removeAnimationMixer = this.removeAnimationMixer.bind(this);\n    this.positionChanged = this.positionChanged.bind(this);\n\n    this.isAtCloseDistance = this.isAtCloseDistance.bind(this);\n    const maxDistance = 0.5;\n    this.maxDistanceSquared = maxDistance * maxDistance;\n    this.rig = document.querySelector('#rig');\n\n    this.fbxLoader = new THREE.FBXLoader();\n    this.glbLoader = new THREE.GLTFLoader();\n    this.updatedEventDetail = { el: undefined, data: undefined, oldData: undefined };\n  },\n\n  update: function (oldData) {\n    this.updatedEventDetail.data = this.data;\n    this.updatedEventDetail.oldData = oldData;\n    this.updatedEventDetail.el = this.el;\n    this.el.sceneEl.emit('player-info-updated', this.updatedEventDetail);\n    this.updatedEventDetail.data = undefined;\n    this.updatedEventDetail.oldData = undefined;\n    this.updatedEventDetail.el = undefined;\n    // if (this.head) this.head.setAttribute('material', 'color', this.data.color);\n    if (this.nametag) this.nametag.setAttribute('value', this.data.name);\n\n    this.avatarEl = this.el.querySelector('.model');\n\n    if (!this.avatarEl) {\n      // our own avatar\n      this.avatarEl = document.createElement('a-entity');\n      this.el.appendChild(this.avatarEl);\n      this.avatarEl.setAttribute('class', 'model');\n    }\n    this.avatarEl.setAttribute('shadow', '');\n\n    this.el.object3D.rotation.order = 'YXZ';\n    this.avatarEl.object3D.rotation.order = 'YXZ';\n\n    if (oldData && this.data.avatarSrc && oldData.avatarSrc && this.data.avatarSrc !== oldData.avatarSrc) {\n      this.mesh = undefined;\n      // avatar-animation-mixer component references previous loaded model, remove it, it will be recreated in model-loaded\n      this.removeAnimationMixer();\n    }\n    if (this.data.avatarSrc) {\n      this.avatarEl.setAttribute('gltf-model', this.data.avatarSrc);\n    }\n\n    if (!this.mesh || !this.mixer) {\n      return;\n    }\n\n    if (oldData && this.data && (oldData.state !== this.data.state || oldData.avatarPose !== this.data.avatarPose)) {\n      this.setAnimationFromState();\n    }\n  },\n\n  tick: function (t) {\n    if (this.el.id !== 'rig') {\n      this.el.object3D.visible = !this.isAtCloseDistance(this.rig.object3D, this.el.object3D);\n    }\n    if (this.mesh) {\n      const morphTargetDictionary = this.mesh.morphTargetDictionary;\n      if (t % 6000 < 500) {\n        // every 6s\n        this.startBlinking = true;\n      }\n      const valueQuick = (Math.sin(t / 100) + 1) / 2; // 0-1\n      if (valueQuick < 0.3) {\n        this.startBlinking = false;\n        this.mesh.morphTargetInfluences[morphTargetDictionary['h_expressions.ReyeClose_h']] = 0;\n        this.mesh.morphTargetInfluences[morphTargetDictionary['h_expressions.LeyeClose_h']] = 0;\n      }\n      if (this.startBlinking) {\n        this.mesh.morphTargetInfluences[morphTargetDictionary['h_expressions.ReyeClose_h']] = valueQuick;\n        this.mesh.morphTargetInfluences[morphTargetDictionary['h_expressions.LeyeClose_h']] = valueQuick;\n      }\n    }\n  },\n\n  setAnimation: function (props) {\n    this.avatarEl.setAttribute('animation-mixer', props);\n  },\n\n  setAnimationFromState() {\n    let clip = this.data.state;\n    if (this.data.state === 'Idle') {\n      clip = this.data.avatarPose === 'sit' ? 'SittingIdle' : 'Idle';\n    }\n\n    this.setAnimation(`clip:${clip};loop:repeat`);\n  },\n\n  getAnimationMixer: function () {\n    return this.avatarEl.getAttribute('animation-mixer');\n  },\n\n  removeAnimationMixer: function () {\n    this.avatarEl.removeAttribute('animation-mixer');\n    this.mixer = null;\n  },\n\n  positionChanged() {\n    if (this.el.sceneEl.systems.waypoint?.occupyWaypoint) {\n      this.el.sceneEl.systems.waypoint.unoccupyWaypoint();\n    }\n\n    if (this.mixer) {\n      clearTimeout(this.revertToIdleTimeout);\n      this.revertToIdleTimeout = setTimeout(() => {\n        this.el.setAttribute('player-info', 'state', 'Idle');\n      }, 100);\n      this.el.setAttribute('player-info', 'state', 'Walking');\n    }\n  },\n\n  isAtCloseDistance: function (from, to) {\n    const f = from.position;\n    const t = to.position;\n    const dx = f.x - t.x;\n    const dz = f.z - t.z;\n    const distanceSquared = dx * dx + dz * dz;\n    const isClose = distanceSquared < this.maxDistanceSquared;\n    return isClose;\n  },\n\n  events: {\n    // from blink-controls\n    teleported: function (evt) {\n      this.positionChanged();\n    },\n    // from movement-controls\n    moved: function (evt) {\n      this.positionChanged();\n    },\n    // from cursor-teleport\n    'navigation-start': function (evt) {\n      if (this.el.sceneEl.systems.waypoint?.occupyWaypoint) {\n        this.el.sceneEl.systems.waypoint.unoccupyWaypoint();\n      }\n\n      if (this.el.hasAttribute('simple-navmesh-constraint')) {\n        this.el.setAttribute('simple-navmesh-constraint', 'enabled', false);\n      }\n\n      this.el.setAttribute('player-info', 'state', 'Walking');\n    },\n    'navigation-end': function (evt) {\n      if (this.el.hasAttribute('simple-navmesh-constraint')) {\n        this.el.setAttribute('simple-navmesh-constraint', 'enabled', true);\n      }\n\n      this.el.setAttribute('player-info', 'state', 'Idle');\n    },\n    'model-loaded': function (evt) {\n      if (this.el.id === 'rig') {\n        // Hide my own avatar\n        // this.avatarEl.object3D.visible = false;\n        this.avatarEl.object3D.traverse((obj) => {\n          if (!obj.layers) return;\n          obj.layers.disableAll();\n          obj.layers.enable(3);\n        });\n      }\n      this.avatarEl.object3D.traverse((obj) => {\n        if (obj.isMesh) {\n          obj.frustumCulled = false;\n        }\n      });\n\n      const model = evt.detail.model;\n      // Original fbx avatar has master->Reference->H_DDS_HighRes\n      // meshoptimized glb avatar has Scene->H_DDS_HighRes, so we rename Scene to Armature and\n      // map Reference to Armature when converting the animations, also ignoring the master.quaternion track that doesn't seem to do anything.\n      model.name = 'Armature';\n      this.mesh = model.getObjectByName('H_DDS_HighRes');\n      if (!this.mesh) return;\n      // window.mesh = this.mesh;\n      // window.model = model;\n\n      const callback = () => {\n        model.animations = Array.from(animationsCache[cacheKey].animations);\n        this.setAnimationFromState();\n        this.mixer = this.getAnimationMixer();\n      };\n      const isWoman = this.data.avatarSrc.indexOf('_F_') > -1;\n      const cacheKey = `valid-${isWoman}`;\n      animationsCache[cacheKey] = animationsCache[cacheKey] || {};\n      if (animationsCache[cacheKey].animations) {\n        callback();\n        return;\n      }\n\n      if (!animationsCache[cacheKey].promise) {\n        const promise = new Promise((resolve, reject) => {\n          (async () => {\n            const animations = isWoman ? ANIMATIONS_WOMAN : ANIMATIONS_MAN;\n            const convertedAnimations = [];\n            for (let [animationName, url, options] of animations) {\n              const loader = url.indexOf('.glb') > -1 ? this.glbLoader : this.fbxLoader;\n              options = options ?? {};\n              if (window.USE_GLITCH === false) {\n                url = new URL(url).pathname.split('/').pop();\n              }\n              const asset = await loader.loadAsync(url);\n              const clip = asset.animations[0];\n              let newClip = clip;\n              clip.name = animationName;\n              newClip = simpleRetargetClip(this.mesh, clip, {\n                hip: 'Hips',\n                names: { Reference: 'Armature' },\n                offsets: options.quatOffsets ?? {},\n                positionMultiplier: options.positionMultiplier ?? 1.0,\n                positionOffset: options.positionOffset ?? 0,\n                ignoreBones: options.ignoreBones ?? [],\n                removeHipsForwardAnimation: options.removeHipsForwardAnimation ?? false,\n              });\n              console.log('retargeted', clip.name, 'renamed to', animationName);\n              convertedAnimations.push(newClip);\n              console.log('animation after conversion', newClip);\n            }\n\n            animationsCache[cacheKey].animations = convertedAnimations;\n            resolve();\n          })();\n        });\n        animationsCache[cacheKey].promise = promise;\n      }\n      animationsCache[cacheKey].promise.then(callback).catch(() => {\n        console.error('Error loading the animations');\n      });\n    },\n  },\n});\n\nfunction getBones(skeleton) {\n  return Array.isArray(skeleton) ? skeleton : skeleton.bones;\n}\n\nfunction getBoneByName(name, skeleton) {\n  for (let i = 0, bones = getBones(skeleton); i < bones.length; i++) {\n    if (name === bones[i].name) return bones[i];\n  }\n}\n\nfunction simpleRetargetClip(target, clip, options = {}) {\n  const names = options.names ?? {};\n  const offsets = options.offsets ?? {};\n  const positionMultiplier = options.positionMultiplier ?? 1.0;\n  const inverseBones = options.inverseBones ?? false;\n  const ignoreBones = options.ignoreBones ?? [];\n  const removeHipsForwardAnimation = options.removeHipsForwardAnimation ?? false;\n  const positionOffset = options.positionOffset ?? 0;\n  const tracks = [];\n  const quat = new THREE.Quaternion();\n\n  clip.tracks.forEach((track) => {\n    const trackSplitted = track.name.split('.');\n    const mixamoRigName = trackSplitted[0];\n    const boneName = names[mixamoRigName] || mixamoRigName;\n    const propertyName = trackSplitted[1];\n    const boneTo = getBoneByName(boneName, target.skeleton);\n    if (!boneTo && boneName !== 'Armature') return;\n    if (ignoreBones.indexOf(boneName) > -1) {\n      console.log(clip.name, 'ignore track', boneName);\n      return;\n    }\n\n    if (track instanceof THREE.VectorKeyframeTrack && track.name.endsWith('position') && options.hip === boneName) {\n      const threetrack = new THREE.VectorKeyframeTrack(\n        `${boneName}.${propertyName}`,\n        track.times,\n        track.values.map((v, i) => {\n          v = v * positionMultiplier;\n          if (removeHipsForwardAnimation && i % 3 === 1) {\n            v = 0;\n          }\n          if (positionOffset !== 0 && i % 3 === 2) {\n            v += positionOffset;\n          }\n          return v;\n        }),\n      );\n      tracks.push(threetrack);\n    } else if (track instanceof THREE.QuaternionKeyframeTrack) {\n      const times = track.times;\n      const values = track.values.map((v, i) => (inverseBones && i % 2 === 0 ? -v : v));\n      const offset = offsets[boneName];\n      if (offset) {\n        const numFrames = track.values.length / 4;\n        for (let i = 0; i < numFrames; ++i) {\n          quat.fromArray(values, i * 4);\n          quat.multiply(offset);\n          quat.toArray(values, i * 4);\n        }\n      }\n\n      const threetrack = new THREE.QuaternionKeyframeTrack(`${boneName}.${propertyName}`, times, values);\n      tracks.push(threetrack);\n    }\n  });\n\n  return new THREE.AnimationClip(clip.name, clip.duration, tracks);\n}\n\nfunction getQuatOffsetsFromEulers(rotations) {\n  const offsets = {};\n  for (const [boneName, rotation] of Object.entries(rotations)) {\n    offsets[boneName] = new THREE.Quaternion().setFromEuler(\n      new THREE.Euler(\n        rotation[0] * THREE.MathUtils.DEG2RAD,\n        rotation[1] * THREE.MathUtils.DEG2RAD,\n        rotation[2] * THREE.MathUtils.DEG2RAD,\n      ),\n    );\n  }\n  return offsets;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* global AFRAME */\nimport './player-info';\nimport './change-room';\n\nAFRAME.registerComponent('spawn-in-circle', {\n  schema: {\n    radius: { type: 'number', default: 1 },\n  },\n\n  init: function () {\n    const el = this.el;\n    const center = el.getAttribute('position');\n\n    const angleRad = this.getRandomAngleInRadians();\n    const circlePoint = this.randomPointOnCircle(this.data.radius, angleRad);\n    const worldPoint = { x: circlePoint.x + center.x, y: center.y, z: circlePoint.y + center.z };\n    el.setAttribute('position', worldPoint);\n\n    // const angleDeg = (angleRad * 180) / Math.PI;\n    // const angleToCenter = -1 * angleDeg + 90;\n    // angleRad = THREE.MathUtils.degToRad(angleToCenter);\n    // el.object3D.rotation.set(0, angleRad, 0);\n  },\n\n  getRandomAngleInRadians: function () {\n    return Math.PI * 2 * (Math.floor(Math.random() * 8) / 8.0);\n  },\n\n  randomPointOnCircle: function (radius, angleRad) {\n    const x = Math.cos(angleRad) * radius;\n    const y = Math.sin(angleRad) * radius;\n    return { x: x, y: y };\n  },\n});\n"],"names":["root","factory","exports","module","define","amd","a","i","self","nafConfig","connecting","AFRAME","registerComponent","schema","on","type","default","room","url","select","target","init","this","changeRoom","bind","sceneEl","el","data","window","history","pushState","response","fetch","ok","Error","html","text","selectedContent","DOMParser","parseFromString","querySelector","document","outerHTML","console","error","getAttribute","connectOnLoad","removeAttribute","setTimeout","setAttribute","emit","body","addEventListener","rig","getElementById","creator","NAF","clientId","utils","takeOwnership","once","play","pause","removeEventListener","ANIMATIONS_MAN","ignoreBones","positionMultiplier","positionOffset","removeHipsForwardAnimation","ANIMATIONS_WOMAN","animationsCache","schemas","getComponentsOriginal","getComponents","template","hasTemplate","add","components","component","requiresNetworkUpdate","vectorRequiresUpdate","selector","y180Quaternion","THREE","Quaternion","setFromAxisAngle","Vector3","Math","PI","truncate","num","round","getBoneByName","name","skeleton","bones","Array","isArray","getBones","length","simpleRetargetClip","clip","options","names","offsets","inverseBones","tracks","quat","forEach","track","trackSplitted","split","mixamoRigName","boneName","propertyName","indexOf","log","VectorKeyframeTrack","endsWith","hip","threetrack","times","values","map","v","push","QuaternionKeyframeTrack","offset","numFrames","fromArray","multiply","toArray","AnimationClip","duration","Head","id","headBuffer","InterpolationBuffer","localEuler","Euler","localQuaternion","localQuaternion2","localQuaternion3","tmpQuaternion","transitionQuaternionStart","transitionQuaternionEnd","prevTime","transitionProgress","events","queueMicrotask","mesh","hips","spine","spine1","spine2","neck","head","spine1quaternion","copy","quaternion","spine2quaternion","neckquaternion","update","oldData","setQuaternion","tick","time","dt","cameraEl","camera","object3D","avatarQuaternion","avatarEl","hmdQuaternion","hmdEuler","setFromQuaternion","x","z","hmdXYRotation","setFromEuler","angleTo","slerpQuaternions","state","premultiply","invert","tmp","rotation","y","max","min","w","getQuaternion","dependencies","color","avatarSrc","muted","avatarPose","oneOf","seatRotation","nametag","setAnimation","setAnimationFromState","getAnimationMixer","removeAnimationMixer","positionChanged","isAtCloseDistance","maxDistanceSquared","maxDistance","fbxLoader","FBXLoader","glbLoader","GLTFLoader","updatedEventDetail","undefined","createElement","appendChild","order","mixer","t","visible","morphTargetDictionary","startBlinking","valueQuick","sin","morphTargetInfluences","props","systems","waypoint","occupyWaypoint","unoccupyWaypoint","clearTimeout","revertToIdleTimeout","from","to","f","position","dx","dz","teleported","evt","moved","hasAttribute","traverse","obj","layers","disableAll","enable","isMesh","frustumCulled","model","detail","getObjectByName","callback","animations","cacheKey","isWoman","promise","Promise","resolve","reject","convertedAnimations","animationName","loader","USE_GLITCH","URL","pathname","pop","loadAsync","newClip","Reference","quatOffsets","then","catch","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","radius","center","angleRad","getRandomAngleInRadians","circlePoint","randomPointOnCircle","worldPoint","floor","random","cos"],"sourceRoot":""}